name: Build and Sign Android APK

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SIGNING_KEYSTORE_BASE64: ${{ secrets.SIGNING_KEYSTORE_BASE64 }}
      SIGNING_KEYSTORE_PASSWORD: ${{ secrets.SIGNING_KEYSTORE_PASSWORD }}
      SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
      SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Install frontend dependencies
        working-directory: frontend
        run: npm install

      - name: Build React app
        working-directory: frontend
        run: npm run build

      - name: Install Capacitor CLI and Android platform
        working-directory: frontend
        run: |
          npm install @capacitor/cli @capacitor/core @capacitor/android --save

      - name: Capacitor init & add android
        working-directory: frontend
        run: |
          npx cap init shisanshui-multi com.example.shisanshui --web-dir=build
          npx cap add android

      # 强制全项目所有 gradle 文件都用 Java 17
      - name: 强制所有 Gradle Java 版本为 17
        run: |
          find . -type f \( -name "*.gradle" -o -name "*.gradle.kts" \) -print0 | xargs -0 sed -i 's/JavaVersion\.VERSION_21/JavaVersion.VERSION_17/g'
          find . -type f \( -name "*.gradle" -o -name "*.gradle.kts" \) -print0 | xargs -0 sed -i 's/sourceCompatibility[ ]*=[ ]*21/sourceCompatibility = 17/g'
          find . -type f \( -name "*.gradle" -o -name "*.gradle.kts" \) -print0 | xargs -0 sed -i 's/targetCompatibility[ ]*=[ ]*21/targetCompatibility = 17/g'
          find . -type f \( -name "*.gradle" -o -name "*.gradle.kts" \) -print0 | xargs -0 sed -i 's/sourceCompatibility[ ]*=[ ]*JavaVersion\.VERSION_21/sourceCompatibility = JavaVersion.VERSION_17/g'
          find . -type f \( -name "*.gradle" -o -name "*.gradle.kts" \) -print0 | xargs -0 sed -i 's/targetCompatibility[ ]*=[ ]*JavaVersion\.VERSION_21/targetCompatibility = JavaVersion.VERSION_17/g'

      # 检查是否还有 21 的配置，便于调试
      - name: 检查是否还有 VERSION_21
        run: |
          grep -r --include="*.gradle*" "VERSION_21" . || true
          grep -r --include="*.gradle*" "sourceCompatibility" . || true
          grep -r --include="*.gradle*" "targetCompatibility" . || true

      - name: Prepare app directory & decode keystore from secrets
        if: env.SIGNING_KEYSTORE_BASE64 != ''
        run: |
          mkdir -p frontend/android/app
          echo "$SIGNING_KEYSTORE_BASE64" | base64 -d > frontend/android/app/release.keystore

      - name: Configure signing in build.gradle
        if: env.SIGNING_KEYSTORE_BASE64 != ''
        run: |
          GRADLE_FILE="frontend/android/app/build.gradle"
          if ! grep -q "signingConfigs" "$GRADLE_FILE"; then
            awk '/defaultConfig {/ {
              print;
              print "    signingConfigs {";
              print "        release {";
              print "            storeFile file('\''release.keystore'\'')";
              print "            storePassword '\''$SIGNING_KEYSTORE_PASSWORD'\''";
              print "            keyAlias '\''$SIGNING_KEY_ALIAS'\''";
              print "            keyPassword '\''$SIGNING_KEY_PASSWORD'\''";
              print "        }";
              print "    }";
              next
            } 1' "$GRADLE_FILE" > tmp && mv tmp "$GRADLE_FILE"
          fi
          if ! grep -A 1 "buildTypes" "$GRADLE_FILE" | grep -q "release"; then
            awk '/buildTypes {/ {
              print;
              print "        release {";
              print "            signingConfig signingConfigs.release";
              print "            minifyEnabled false";
              print "            proguardFiles getDefaultProguardFile('\''proguard-android-optimize.txt'\''), '\''proguard-rules.pro'\''";
              print "        }";
              next
            } 1' "$GRADLE_FILE" > tmp && mv tmp "$GRADLE_FILE"
          fi

      - name: Build signed APK (release)
        if: env.SIGNING_KEYSTORE_BASE64 != ''
        working-directory: frontend/android
        run: ./gradlew assembleRelease

      - name: Build unsigned APK (debug)
        if: env.SIGNING_KEYSTORE_BASE64 == ''
        working-directory: frontend/android
        run: ./gradlew assembleDebug

      - name: Upload APK (signed release)
        if: env.SIGNING_KEYSTORE_BASE64 != ''
        uses: actions/upload-artifact@v4
        with:
          name: app-release.apk
          path: frontend/android/app/build/outputs/apk/release/app-release.apk

      - name: Upload APK (unsigned debug)
        if: env.SIGNING_KEYSTORE_BASE64 == ''
        uses: actions/upload-artifact@v4
        with:
          name: app-debug.apk
          path: frontend/android/app/build/outputs/apk/debug/app-debug.apk
